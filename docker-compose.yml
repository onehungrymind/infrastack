version: '3.7'

services:
  client:
    build: ./client
    depends_on:
      - server
    networks:
      - vpnetwork
    volumes:
      - ./client:/app/
      - /app/node_modules
    ports:
      - "4200:4200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build: ./server
    volumes:
      - ./server:/app/
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - vpnetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_DB: public
      POSTGRES_USER: postgres
    networks:
      - vpnetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname public --username=postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

networks:
  vpnetwork:
    driver: bridge

volumes:
  db_data:

# 'docker-compose up --remove-orphans --build'

